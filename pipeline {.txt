pipeline {
    agent any
    
    environment {
        AWS_DEFAULT_REGION = 'us-east-1'
        IMAGE_NAME = 'my-ecs-repo/my-app'
        TASK_FAMILY = 'my-task-family'
        CLUSTER = 'my-ecs-cluster'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                sh 'docker build -t $IMAGE_NAME .'
            }
        }
        
        stage('Push to ECR') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY"
                    sh "docker tag $IMAGE_NAME $ECR_REGISTRY/$IMAGE_NAME"
                    sh "docker push $ECR_REGISTRY/$IMAGE_NAME"
                }
            }
        }
        
        stage('Update Task Definition') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "aws ecs register-task-definition --family $TASK_FAMILY --container-definitions file://ecs-task-def.json"
                }
            }
        }
        
        stage('Update Service') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh "aws ecs update-service --cluster $CLUSTER --service my-service --force-new-deployment --task-definition $TASK_FAMILY:1"
                }
            }
        }
    }
}



